- name: Install Prometheus Node Exporter
  hosts: all
  become: yes
  vars:
    node_exporter_link: "https://github.com/prometheus/node_exporter/releases/download/v0.21.0/node_exporter-0.21.0.linux-amd64.tar.gz"
    node_exporter_port: 9100
    node_exporter_user: node_exporter
    
  tasks:
    - name: Check if port is in use
      wait_for:
        port: "{{ node_exporter_port }}"
        state: absent
      register: port_check

    - name: Print message and stop task if port is in use
      fail:
        msg: "Port {{ node_exporter_port }} is in use, installation cannot continue"
      when: port_check.failed


    - name: Download and install Node Exporter
      get_url:
        url: "{{ node_exporter_link }}"
        dest: "/tmp/node_exporter.tar.gz"

    - name: Extract Node Exporter
      unarchive:
        src: "/tmp/node_exporter.tar.gz"
        dest: "/usr/local"
        remote_src: yes


    - name: Create a symbolic link for Node Exporter
      file:
        src: "/usr/local/node_exporter-0.21.0.linux-amd64/node_exporter"
        dest: "/usr/local/bin/node_exporter"
        state: link

    - name: Create node_exporter user
      user:
        name: "{{ node_exporter_user }}"
        state: present


    - name: Create Systemd service for Node Exporter  
      become: yes      
      copy:     
        src: node_exporter.service  
        dest: /etc/systemd/system/node_exporter.service   
      notify: 
      - reload systemctl
      
      
    - name: Start Node Exporter as Systemd service
      become: yes
      systemctl:
        name: node_exporter
        state: started

    - name: Check status of Node Exporter
      shell: netstat -tlpn | grep ":{{ node_exporter_port }}"
      register: node_exporter_status

    - name: Display status of Node Exporter
      debug:
        var: node_exporter_status.stdout_lines

  handlers:
   - name: reload systemctl
     become: yes
     systemctl:
       name: daemon-reload
       state: started
